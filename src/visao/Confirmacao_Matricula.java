/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import dao.EstudanteDao;
import dao.DisciplinaDao;
import dao.TrimestreDao;
import dao.AnoLectivoDao;
import dao.ClasseDao;
import dao.ConfirmacaoMatriculaDao1;
import dao.CursoDao;
import dao.PrecoConfirmacaoDao;
import dao.TipoConfirmacaoDao;
import dao.TurmaDao;
import dao.UsuarioDao;
import entity.Estudante;
import entity.ConfirmacaoMatricula;
import ireport.FichaMatriculaConfirmcao;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import javax.persistence.EntityManagerFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.JPAEntntityMannagerFactoryUtil;
import util.MetodosUtil;
import util.PictureChooser;

/**
 *
 * @author mac
 */

public class Confirmacao_Matricula extends javax.swing.JFrame {

   
    private EntityManagerFactory emf = JPAEntntityMannagerFactoryUtil.em;
    private EstudanteDao estudanteDao = new EstudanteDao(emf);
    private TrimestreDao semestreDao = new TrimestreDao(emf);
    private AnoLectivoDao anoLectivoDao = new AnoLectivoDao(emf);
    private DisciplinaDao disciplinaDao = new DisciplinaDao(emf);
    private TipoConfirmacaoDao tipoConfirmacaoDao = new TipoConfirmacaoDao(emf);
    private ClasseDao classeDao = new ClasseDao(emf);
    private CursoDao cursoDao = new CursoDao(emf);
    private TurmaDao turmaDao = new TurmaDao(emf);
    private PrecoConfirmacaoDao precoConfirmacaoDao = new PrecoConfirmacaoDao(emf);
    private ConfirmacaoMatriculaDao1 confirmacaoMatriculaDao = new ConfirmacaoMatriculaDao1(emf);
    private UsuarioDao usuarioDao =  new UsuarioDao(emf);
    private DefaultListModel listModel = new DefaultListModel();
    private DefaultListModel listModelTurma = new DefaultListModel();
    private PictureChooser image_view;
    private ImageIcon imageIcon;
    private ConfirmacaoMatricula confirmacaoMatricula;
    private int id_user = 0, cod_confirmacaoMatricula = 0, cod_estudante = 0;
    private double preco = 13.5;
    
    
    
    public Confirmacao_Matricula(int id_user) {
        
        initComponents();
        setLocationRelativeTo(null);
        actualizar();
        this.id_user = id_user;
        this.cod_confirmacaoMatricula = cod_confirmacaoMatricula;
        jList1.setModel(listModel);
        
        setCampos();
        mostrar_preco_confirmacao();
        
        txt_iniciais_nome.addKeyListener( new TratarEventoTeclado() );
        //limpar_campos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cmb_tipoConf = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        lb_preco_confirmacao = new javax.swing.JLabel();
        dc_data_confirmacao = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();
        btn_salvar = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        cmb_anoLectivo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cmbClasse = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cmbCurso = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        cmbTurma = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txt_iniciais_nome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jTextField1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(192, 208, 232));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setBackground(new java.awt.Color(192, 208, 232));
        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("                          CONFIRMAÇÃO - MATRÍCULA");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 982, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 58, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Data de Confirmação/Matrícula:");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, 25));

        jLabel4.setText("Selecione o tipo:");
        jPanel4.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, -1));

        cmb_tipoConf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmb_tipoConf.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmb_tipoConfActionPerformed(evt);
            }
        });
        jPanel4.add(cmb_tipoConf, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 70, 160, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jLabel1.setText("Preço:");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 120, -1, -1));

        lb_preco_confirmacao.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        lb_preco_confirmacao.setForeground(new java.awt.Color(255, 0, 0));
        lb_preco_confirmacao.setText("0");
        jPanel4.add(lb_preco_confirmacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, -1, -1));
        jPanel4.add(dc_data_confirmacao, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, -1, -1));

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Logout 32x32.png"))); // NOI18N
        jButton3.setText("Sair");
        jButton3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton3ActionPerformed(evt);
            }
        });

        btn_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/6665_32x32.png"))); // NOI18N
        btn_salvar.setText("Salvar");
        btn_salvar.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btn_salvarActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][]
            {

            },
            new String []
            {
                " Nº Estudante", "Nome", "Turma", "Tipo", "Data Confirmação"
            }
        )
        {
            boolean[] canEdit = new boolean []
            {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex)
            {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/eliminar_32x32.png"))); // NOI18N
        jButton2.setText("Eliminar");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        cmb_anoLectivo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmb_anoLectivo.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmb_anoLectivoActionPerformed(evt);
            }
        });

        jLabel5.setText("Ano Lectivo:");

        cmbClasse.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbClasse.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmbClasseActionPerformed(evt);
            }
        });

        jLabel7.setText("Ano Curricular:");

        cmbCurso.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbCurso.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmbCursoActionPerformed(evt);
            }
        });

        jLabel9.setText("Curso:");

        cmbTurma.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbTurma.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                cmbTurmaMouseClicked(evt);
            }
        });
        cmbTurma.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                cmbTurmaActionPerformed(evt);
            }
        });

        jLabel8.setText("Turma:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(64, 64, 64)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbCurso, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmbClasse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cmb_anoLectivo, 0, 173, Short.MAX_VALUE)
                    .addComponent(cmbTurma, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmb_anoLectivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmbClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbTurma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addContainerGap(26, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar"));

        txt_iniciais_nome.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                txt_iniciais_nomeActionPerformed(evt);
            }
        });

        jLabel2.setText(" Iniciais Nome de Estudante:");

        jList1.setModel(new javax.swing.AbstractListModel<String>()
        {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter()
        {
            public void mouseClicked(java.awt.event.MouseEvent evt)
            {
                jList1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt)
            {
                jList1MousePressed(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter()
        {
            public void keyPressed(java.awt.event.KeyEvent evt)
            {
                jList1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt)
            {
                jList1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jTextField1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Numero de  Matricula:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jTextField1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_iniciais_nome, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txt_iniciais_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(160, 160, 160)
                                .addComponent(btn_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 762, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_salvar)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
        // TODO add your handling code here:
        procedimento_salvar();
    }//GEN-LAST:event_btn_salvarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cmb_anoLectivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_anoLectivoActionPerformed
        // TODO add your handling code here:
        mostra_turma_por_ClasseAnoCurso();
    }//GEN-LAST:event_cmb_anoLectivoActionPerformed

    private void cmbClasseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbClasseActionPerformed
        // TODO add your handling code here:
        mostra_turma_por_ClasseAnoCurso();
    }//GEN-LAST:event_cmbClasseActionPerformed

    private void cmbTurmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbTurmaActionPerformed
        // TODO add your handling code here:
       //mostra_estudantes_por_turma();
       
    }//GEN-LAST:event_cmbTurmaActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        
        //procedimento_eliminar();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cmbCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCursoActionPerformed
        // TODO add your handling code here:
        mostra_turma_por_ClasseAnoCurso();
        mostrar_preco_confirmacao();
    }//GEN-LAST:event_cmbCursoActionPerformed

    private void cmbTurmaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbTurmaMouseClicked
        // TODO add your handling code here:
        
        //adicionar_estudantes_jList(  confirmacaoMatriculaDao.getAllEstudantesByTurma(getIdTurma()) );
    }//GEN-LAST:event_cmbTurmaMouseClicked

    private void cmb_tipoConfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_tipoConfActionPerformed
        // TODO add your handling code here:
        mostrar_preco_confirmacao();
    }//GEN-LAST:event_cmb_tipoConfActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jList1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyReleased
        // TODO add your handling code here:
        //mostrar_dados();
    }//GEN-LAST:event_jList1KeyReleased

    private void jList1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jList1KeyPressed

    private void jList1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jList1MousePressed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        // mostrar_dados();
    }//GEN-LAST:event_jList1MouseClicked

    private void txt_iniciais_nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_iniciais_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_iniciais_nomeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Confirmacao_Matricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Confirmacao_Matricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Confirmacao_Matricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Confirmacao_Matricula.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Confirmacao_Matricula(1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_salvar;
    private javax.swing.JComboBox<String> cmbClasse;
    private javax.swing.JComboBox<String> cmbCurso;
    private javax.swing.JComboBox<String> cmbTurma;
    private javax.swing.JComboBox<String> cmb_anoLectivo;
    private javax.swing.JComboBox<String> cmb_tipoConf;
    private com.toedter.calendar.JDateChooser dc_data_confirmacao;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel lb_preco_confirmacao;
    private javax.swing.JTextField txt_iniciais_nome;
    // End of variables declaration//GEN-END:variables


//    private void setComponentes() {
//            dcDataInicio.setDate(new Date());
//            adicionar_estudantes_jList();   
//            cmbTipoConfirmacao.setModel( new DefaultComboBoxModel(  tipoDemissaoDao.buscaTodos()    )  );            
//            //activar_campos(false, true, false);
//            actualizar_tabela();
//    }
    
    private void adicionar_estudantes_jList() {    
        
        List<Estudante> list = estudanteDao.buscaTodosEstudante();            
        try {
             listModel.clear();
                 for (int i = 0; i < list.size(); i++) {
                        listModel.add(i, list.get(i).getNomeCompleto());        
                 }
                 
        } catch (Exception e) {
        }
    
    }
    
    
    private void adicionar_estudantes_jList( List<Estudante> list) {    
        
        listModel.clear();
        try {
                 for (int i = 0; i < list.size(); i++) {
                        listModel.add(i, list.get(i).getNomeCompleto());        
                 }
                 
        } catch (Exception e) {
        }
    
    }
   
    private boolean validar_campos() {
            
          if(  cmb_anoLectivo.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Pf seleccione o ano lectivo", "AVISO", JOptionPane.WARNING_MESSAGE);
                //setSelectedIndex(2);
                cmb_anoLectivo.requestFocus();
                return false;
          
          }
          else if(  cmbClasse.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Pf seleccione a classe", "AVISO", JOptionPane.WARNING_MESSAGE);
                //setSelectedIndex(2);
                cmbClasse.requestFocus();
                return false;
          
          }
          else  if(  cmbCurso.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Pf seleccione o curso ", "AVISO", JOptionPane.WARNING_MESSAGE);
                //setSelectedIndex(2);
                cmbCurso.requestFocus();
                return false;
          
          }
          else  if(  cmbTurma.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Pf seleccione a Turma", "AVISO", JOptionPane.WARNING_MESSAGE);
                //setSelectedIndex(2);
                cmbTurma.requestFocus();
                return false;
          
          }
          else if( dc_data_confirmacao.getCalendar() == null ) {
                JOptionPane.showMessageDialog(null, "Pf insira a data de Confirmacao ou Matricula", "AVISO", JOptionPane.WARNING_MESSAGE);
                 //setSelectedIndex(0);
                dc_data_confirmacao.requestFocus();
                return false;
          }
                       
          else  if(  cmb_tipoConf.getSelectedIndex() == 0) {
                JOptionPane.showMessageDialog(null, "Pf seleccione o Tipo de Confirmação", "AVISO", JOptionPane.WARNING_MESSAGE);
                //setSelectedIndex(2);
                cmb_tipoConf.requestFocus();
                return false;
          
          }
          
          
          return true;
    
    }
    
    private void limpar_campos() {
        
        
          cmb_anoLectivo.setSelectedIndex(0);
          cmbClasse.setSelectedIndex(0);
          cmbCurso.setSelectedIndex(0);
          cmbTurma.setSelectedIndex(0);
          dc_data_confirmacao.setDate( null );
          cmb_tipoConf.setSelectedIndex(0);
        
           
    }
    
     
    
    
    private void actualizar(){
        adicionar_tabela(  confirmacaoMatriculaDao.buscaTodasConfirmacoes());
    }

//    private void procedimento_eliminar()
//     {
//         
//         if (this.cod_confirmacaoMatricula!=0)
//         {
//             
//                int opcao = JOptionPane.showConfirmDialog(null, "Tens a certeza que pretendes eliminar essa confirmacaoMatricula do estudante : " +txt_confirmacaoMatricula.getText());
//
//                if ( opcao == JOptionPane.YES_OPTION) {
//
//                            eliminar();
//
//                }
//                else if ( opcao == JOptionPane.NO_OPTION ) {
//                     JOptionPane.showMessageDialog(null, "ConfirmacaoMatricula não eliminada", "INFO", JOptionPane.INFORMATION_MESSAGE);
//                }
//                else if ( opcao == JOptionPane.CANCEL_OPTION ) {
//                     JOptionPane.showMessageDialog(null, "Operação cancelada");
//                }
//                
//         }else JOptionPane.showMessageDialog(null, "Pf seleccione a confirmacaoMatricula", "AVISO", JOptionPane.WARNING_MESSAGE);
//     
//     }


// private void eliminar()
//     {
//         try {
//               turmaDao.destroy(this.cod_confirmacaoMatricula);
//                actualizar();
//               limpar_campos();
//               JOptionPane.showMessageDialog(null, "ConfirmacaoMatricula eliminado com sucesso!...");
//               
//         } catch (Exception e) {
//             JOptionPane.showMessageDialog(null, "Erro ao eliminar a confirmacaoMatricula", "ERRO", JOptionPane.ERROR_MESSAGE);
//         }
//     
//     }    
    

    private void procedimento_salvar() {
    
                if(validar_campos() ) {
                
                     if(  confirmacaoMatriculaDao.exist_MatriculaConfirmacao(getNomeCompleto())   )JOptionPane.showMessageDialog(null, "Este Estudante já se encontra Matriculado no banco de dados","ERRO", JOptionPane.ERROR_MESSAGE);else {
                         try {
                             
                             this.confirmacaoMatricula = new ConfirmacaoMatricula();
                             setDadosConfirmacaoMatricula();
                             this.confirmacaoMatriculaDao.create(this.confirmacaoMatricula);
                             
                             //mostrar_total_estudantes();
                             adicionar_estudantes_jList();
                             actualizar();
                             limpar_campos();
                             JOptionPane.showMessageDialog(null, "Dados salvos com sucesso!...");
                             /**
                              * Chamar o report da matricula ou confirmacao.
                              * primeiro parametro: id ultima confirmação
                              * segundo é o tipo de confirmacap
                              */
                              //new FichaMatriculaConfirmcao(NORMAL, getIdTipoConfirmacao());
                             
                             
                         } catch (Exception e) {
                             JOptionPane.showMessageDialog(null, "Erro ao salvar os dados ","ERRO", JOptionPane.ERROR_MESSAGE);
                             e.printStackTrace();
                         
                         }
                    }
                }
       
    }
    
    private void mostra_turma_por_ClasseAnoCurso() {        
        try {
            
            cmbTurma.setModel( new DefaultComboBoxModel( (Vector) turmaDao.buscaTodasTurmasByCursoAnoClasse(getIdClasse(),getIdAno(),getIdCurso())) );      
            
        } catch (Exception e) {
        }
        
    }
    
    private void setCampos() {
        
         cmb_anoLectivo.setModel( new DefaultComboBoxModel(  anoLectivoDao.buscaTodos()   ));
         cmbClasse.setModel( new DefaultComboBoxModel(  classeDao.buscaTodos()   ));
         cmbCurso.setModel( new DefaultComboBoxModel(   cursoDao.buscaTodos ()));
         dc_data_confirmacao.setDate(  new Date() );
         //cmbTurma.setModel( new DefaultComboBoxModel(  turmaDao.buscaTodos()   ));
         cmb_tipoConf.setModel( new DefaultComboBoxModel(   tipoConfirmacaoDao.buscaTodos()   ));
         cmbTurma.setModel( new DefaultComboBoxModel(  (Vector) turmaDao.buscaTodos()   ));
         
         
    }
    
    public void setDadosConfirmacaoMatricula(){      
        
        this.confirmacaoMatricula.setData( dc_data_confirmacao.getDate() );
        this.confirmacaoMatricula.setHora( new Date() );
        this.confirmacaoMatricula.setFkTurma(turmaDao.findTurma(getIdTurma()) );
        this.confirmacaoMatricula.setFkPrecoConfirmacao(precoConfirmacaoDao.findPrecoConfirmacao( precoConfirmacaoDao.getLastId( getIdTipoConfirmacao(), getIdCurso() ) ) );
        this.confirmacaoMatricula.setFkTipoConfirmacao(tipoConfirmacaoDao.findTipoConfirmacao(tipoConfirmacaoDao.getIdByDescricao(getDescricaoTipoConfirmacao()) ) );
        System.out.println("ID USUÁRIO: " +this.id_user);
        this.confirmacaoMatricula.setFkUsuario(  usuarioDao.findUsuario(  this.id_user  ) );
        this.confirmacaoMatricula.setFkEstudante(estudanteDao.findEstudante(getIdEstudante()  ) );
        
    }
    
    
    
    private String getDescricaoAno()
    {    
         return String.valueOf(cmb_anoLectivo.getSelectedItem());    
    } 
    
    
    private String getTipoConfirmacao()
    {    
         return String.valueOf(cmb_tipoConf.getSelectedItem());    
    } 
    
    private String getDescricaoTipoConfirmacao()
    {    
         return String.valueOf(cmb_tipoConf.getSelectedItem());    
    } 
       
    
    //----------- evento do teclado ---------------------------------------
    class TratarEventoTeclado implements KeyListener {
        
        String prefixo = "";
        public void keyPressed(KeyEvent evt) {

            if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE && evt.getKeyCode() != KeyEvent.VK_ENTER)
            {
                char key = evt.getKeyChar();
            
                try {
                    
                     prefixo = txt_iniciais_nome.getText().trim() + key;
                    adicionar_estudantes_jList(  estudanteDao.getALLEstudante_LIKE_nomeCompleto(prefixo));
                     
                } catch (Exception e) {
                    e.printStackTrace();
//                    limpar_campos();
                }
               
            }
            else if ( evt.getKeyCode() == KeyEvent.VK_BACK_SPACE  )
            {
                try {
                    
                    prefixo = prefixo.toString().trim().substring(0, prefixo.length() - 1);                
                    adicionar_estudantes_jList(  estudanteDao.getALLEstudante_LIKE_nomeCompleto(prefixo));
                    
                } catch (Exception e) {
//                    limpar_campos();
                }
                
            }
        }
        public void keyReleased(KeyEvent evt)
        {}
        public void keyTyped(KeyEvent evt)
        {}
        
    }

    private int getIdEstudante() {
        return estudanteDao.getIdByEstudante(jList1.getSelectedValue());
    }

    private String getNomeCompleto() {
        return jList1.getSelectedValue();
    }

    private int getIdCurso() {
        return cursoDao.getIdByDescricao(cmbCurso.getSelectedItem().toString());
    }

    private int getIdClasse() {
        return classeDao.getPkByDescricao(cmbClasse.getSelectedItem().toString());
    }

    private int getIdAno() {
        return anoLectivoDao.getIdByDescricao(cmb_anoLectivo.getSelectedItem().toString());
    }

    private int getIdTurma() {
        return turmaDao.getPkByDescricao(cmbTurma.getSelectedItem().toString());
    }
    
    private int getIdTipoConfirmacao(){       
        return tipoConfirmacaoDao.getIdByDescricao(cmb_tipoConf.getSelectedItem().toString());
    
    }
    
    private void adicionar_tabela(List<ConfirmacaoMatricula> confirmacaoMatricula) {

        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();

        modelo.setRowCount(0);

        for (int i = 0; i < confirmacaoMatricula.size(); i++) {
            modelo.addRow(new Object[]{
                confirmacaoMatricula.get(i).getFkEstudante().getPkEstudante(),
                confirmacaoMatricula.get(i).getFkEstudante().getNomeCompleto(),
                confirmacaoMatricula.get(i).getFkTurma().getDesignacao(),
                confirmacaoMatricula.get(i).getFkTipoConfirmacao().getDesignacao(),
                //confirmacaoMatricula.get(i).getData(),
                MetodosUtil.getDataString(confirmacaoMatricula.get(i).getData()), //curso.get(i).getAbreviatura()
            });
        }

    }

   private void mostrar_preco_confirmacao() {
        double preco = 0;
        try {
            preco = precoConfirmacaoDao.findPrecoConfirmacao( precoConfirmacaoDao.getLastId( getIdTipoConfirmacao(),  getIdCurso() ) ).getValor();
        } catch (Exception e) {
            e.printStackTrace();
        }
        lb_preco_confirmacao.setText( String.valueOf(preco) );
    }
    
    
    
   

}
