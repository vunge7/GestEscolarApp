/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import dao.EstudanteDao;
import dao.DisciplinaDao;
import dao.AnoLectivoDao;
import dao.ClasseDao;
import dao.ConfirmacaoMatriculaDao;
import dao.CursoDao;
import dao.MesDao;
import dao.PrecoPropinaDao;
import dao.PropinaDao;
import dao.ReciboPropinaDao;
import dao.TipoNotaDao;
import dao.TurmaDao;
import dao.UsuarioDao;
import entity.ConfirmacaoMatricula;
import entity.Estudante;
import entity.Nota;
import entity.PrecoPropina;
import entity.Propina;
import entity.ReciboPropina;
import ireport.ReciboPagamento;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Date;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import javax.persistence.EntityManagerFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import util.JPAEntntityMannagerFactoryUtil;
import util.MetodosUtil;
import util.PictureChooser;

/**
 *
 * @author mac
 */
public class ReciboPropinaVisao extends javax.swing.JFrame
{

    private EntityManagerFactory emf = JPAEntntityMannagerFactoryUtil.em;
    private EstudanteDao estudanteDao = new EstudanteDao( emf );
    private MesDao mesDao = new MesDao( emf );
    private AnoLectivoDao anoLectivoDao = new AnoLectivoDao( emf );
    private DisciplinaDao disciplinaDao = new DisciplinaDao( emf );
    private TipoNotaDao tipoNotaDao = new TipoNotaDao( emf );
    private Vector vectorAux = new Vector();
    private ClasseDao classeDao = new ClasseDao( emf );
    private CursoDao cursoDao = new CursoDao( emf );
    private TurmaDao turmaDao = new TurmaDao( emf );
    private ConfirmacaoMatriculaDao confirmacaoMatriculaDao = new ConfirmacaoMatriculaDao( emf );
    private UsuarioDao usuarioDao = new UsuarioDao( emf );
    private ReciboPropinaDao reciboPropinaDao = new ReciboPropinaDao( emf );

    private PrecoPropinaDao precoPropinaDao = new PrecoPropinaDao( emf );
    private DefaultListModel listModel = new DefaultListModel();
    private PictureChooser image_view;
    private ImageIcon imageIcon;
    private Nota recibo;
    private int id_user = 0, cod_recibo = 0, cod_estudante = 0, cont = 0;
    private double total_geral = 0;
    private PrecoPropina precoPropina;
    private PropinaDao propinaDao = new PropinaDao( emf );

    public ReciboPropinaVisao( int id_user )
    {
        initComponents();
        setLocationRelativeTo( null );

        this.id_user = id_user;
        this.cod_recibo = cod_recibo;
        jList1.setModel( listModel );
        adicionar_estudantes_jList();
        //setComponentes();
        setCampos();
        txt_iniciais_nome.addKeyListener( new TratarEventoTeclado() );
        txtValorEntregue.addKeyListener( new TratarEventoTecladoValorEntregue() );
        //limpar_campos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txt_iniciais_nome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel5 = new javax.swing.JLabel();
        cmbAno = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        dc_data_pagamento = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cmb_mes = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbAnoCurricular = new javax.swing.JLabel();
        lbCurso = new javax.swing.JLabel();
        lbTurma = new javax.swing.JLabel();
        lbSala = new javax.swing.JLabel();
        lbturno = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        lb_propina = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        txt_total_geral = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtValorEntregue = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JTextField();
        btn_salvar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_obs = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pesquisar"));

        txt_iniciais_nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_iniciais_nomeActionPerformed(evt);
            }
        });

        jLabel2.setText(" Iniciais nome:");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jList1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jList1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jLabel5.setText("Ano Lectivo:");

        cmbAno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbAno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbAnoMouseClicked(evt);
            }
        });
        cmbAno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbAnoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txt_iniciais_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmbAno, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbAno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_iniciais_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(114, 114, 114))
        );

        jPanel2.setBackground(new java.awt.Color(192, 208, 232));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setBackground(new java.awt.Color(0, 102, 204));
        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("                           RECIBO DE PROPINA");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 986, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel4.add(dc_data_pagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 50, 162, -1));

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Data de Pagamento:");
        jPanel4.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 25));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Mes (es):");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 50, 20));

        cmb_mes.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmb_mes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmb_mesActionPerformed(evt);
            }
        });
        jPanel4.add(cmb_mes, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 162, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Button-Add-icon.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 50, 30));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/2934_32x32.png"))); // NOI18N
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, 40, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mes (es)", "Valor", "Multa", "Desconto", "Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable1);

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel7.setText(" Ano Curricular:");

        jLabel8.setText("Curso:");

        jLabel9.setText("Turma:");

        jLabel6.setText("Sala:");

        jLabel10.setText("Turno:");

        lbAnoCurricular.setText(".");

        lbCurso.setText(".");

        lbTurma.setText(".");

        lbSala.setText(".");

        lbturno.setText(".");

        jLabel11.setText("Propina:");

        lb_propina.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        lb_propina.setText(".");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel6)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbAnoCurricular, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                    .addComponent(lbCurso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbTurma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbturno, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbSala, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lb_propina, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lbAnoCurricular))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lbCurso))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(lbTurma))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(lbSala))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lbturno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lb_propina, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel5.setBackground(new java.awt.Color(192, 208, 232));

        jLabel4.setText("Total:");

        txt_total_geral.setEditable(false);

        jLabel15.setText("Valor Entregue: ");

        txtValorEntregue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValorEntregueActionPerformed(evt);
            }
        });

        jLabel20.setText("Troco:");

        txtSaldo.setEditable(false);

        btn_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/6665_32x32.png"))); // NOI18N
        btn_salvar.setText("Salvar");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Logout 32x32.png"))); // NOI18N
        jButton3.setText("Sair");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel21.setText("Obs:");

        txt_obs.setColumns(20);
        txt_obs.setRows(5);
        jScrollPane2.setViewportView(txt_obs);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btn_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel20)
                            .addComponent(jLabel4))
                        .addGap(50, 50, 50)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_total_geral, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValorEntregue, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(210, 210, 210)))
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txt_total_geral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21))
                        .addGap(15, 15, 15)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtValorEntregue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(txtSaldo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_salvar)
                    .addComponent(jButton3)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(10, 10, 10)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane4)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        // TODO add your handling code here:
        mostrar_dados();
        //adicionar_estudantes_jList(  confirmacaoMatriculaDao.getConfirmacaoMatByIdEstudanteAnoLetivo(getIdEstudante()) );
    }//GEN-LAST:event_jList1MouseClicked

    private void jList1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jList1KeyReleased
        // TODO add your handling code here:
        mostrar_dados();

    }//GEN-LAST:event_jList1KeyReleased

    private void txt_iniciais_nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_iniciais_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_iniciais_nomeActionPerformed

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
        // TODO add your handling code here:
        procedimento_salvar();
    }//GEN-LAST:event_btn_salvarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        if ( cmb_mes.getSelectedIndex() >= 0 )
        {
            cont++;
            adicionar_item( true );
        }
        else
        {
            JOptionPane.showMessageDialog( null, "Impossivel Inserir!....", "AVISO", JOptionPane.WARNING_MESSAGE );
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void txtValorEntregueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValorEntregueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtValorEntregueActionPerformed

    private void cmbAnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbAnoActionPerformed
        // TODO add your handling code here:
        adicionar_estudantes_jList();

    }//GEN-LAST:event_cmbAnoActionPerformed

    private void cmb_mesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmb_mesActionPerformed
        // TODO add your handling code here:
        cmb_mes.setSelectedIndex( 0 );
    }//GEN-LAST:event_cmb_mesActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if ( cont > 0 )
        {
            cont--;
            adicionar_item( false );
        }
        else
        {
            JOptionPane.showMessageDialog( null, "Impossivel Remover!....", "AVISO", JOptionPane.WARNING_MESSAGE );
        }


    }//GEN-LAST:event_jButton4ActionPerformed

    private void cmbAnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbAnoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbAnoMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels() )
            {
                if ( "Windows".equals( info.getName() ) )
                {
                    javax.swing.UIManager.setLookAndFeel( info.getClassName() );
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger( ReciboPropinaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger( ReciboPropinaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger( ReciboPropinaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger( ReciboPropinaVisao.class.getName() ).log( java.util.logging.Level.SEVERE, null, ex );
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater( new Runnable()
        {
            public void run()
            {
                new ReciboPropinaVisao( 1 ).setVisible( true );
            }
        } );
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_salvar;
    private javax.swing.JComboBox<String> cmbAno;
    private javax.swing.JComboBox<String> cmb_mes;
    private com.toedter.calendar.JDateChooser dc_data_pagamento;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbAnoCurricular;
    private javax.swing.JLabel lbCurso;
    private javax.swing.JLabel lbSala;
    private javax.swing.JLabel lbTurma;
    private javax.swing.JLabel lb_propina;
    private javax.swing.JLabel lbturno;
    private javax.swing.JTextField txtSaldo;
    private javax.swing.JTextField txtValorEntregue;
    private javax.swing.JTextField txt_iniciais_nome;
    private javax.swing.JTextArea txt_obs;
    private javax.swing.JTextField txt_total_geral;
    // End of variables declaration//GEN-END:variables

//    private void setComponentes() {
//            dcDataInicio.setDate(new Date());
//            adicionar_estudantes_jList();   
//            cmbTipoNota.setModel( new DefaultComboBoxModel(  tipoDemissaoDao.buscaTodos()    )  );            
//            //activar_campos(false, true, false);
//            actualizar_tabela();
//    }
    private void adicionar_estudantes_jList()
    {

        // List<Estudante> list = estudanteDao.buscaTodosEstudante();            
        try
        {
            List<Estudante> list = confirmacaoMatriculaDao.buscaTodosEstudanteConfirmados( getIdAno() );
            listModel.clear();
            for ( int i = 0; i < list.size(); i++ )
            {
                listModel.add( i, list.get( i ).getNomeCompleto() );
            }

        }
        catch ( Exception e )
        {
        }

    }

    private void adicionar_estudantes_jList( List<Estudante> list )
    {

        listModel.clear();
        try
        {
            for ( int i = 0; i < list.size(); i++ )
            {
                listModel.add( i, list.get( i ).getNomeCompleto() );
            }

        }
        catch ( Exception e )
        {
        }

    }

    private void limpar_campos()
    {

        dc_data_pagamento.setDate( null );
        cmb_mes.setSelectedIndex( 0 );
        txt_total_geral.setText( "" );
        txtValorEntregue.setText( "" );
        //txt_bolderoux.setText("");
        txt_obs.setText( "" );
//          cmbCurso.setSelectedIndex(0);
//          cmbTurma.setSelectedIndex(0);
//          
//          cmb_tipoConf.setSelectedIndex(0);

    }

    // Adicionar turmas
//    private boolean validar_campos() {
//            
//          if( txt_recibo.getText().equals("") ) {
//              
//                JOptionPane.showMessageDialog(null, "Pf digite a recibo do aluno", "AVISO", JOptionPane.WARNING_MESSAGE);
//                 //jocMessageLabel1.setBusyForeground(Color.RED);
//                //jocMessageLabel1.busyMessage("Pf digite a recibo do aluno");
//                //setSelectedIndex(0);
//                txt_recibo.requestFocus();
//               
//                return false;
//          
//          }
//           else  if( dc_data_lancamento.getCalendar() == null ) {
//                JOptionPane.showMessageDialog(null, "Pf insira a data de nascimento do recibo", "AVISO", JOptionPane.WARNING_MESSAGE);
//                //setSelectedIndex(0);
//                dc_data_lancamento.requestFocus();
//                return false;
//          }
//                   
//          else  if(  cmb_avaliacao.getSelectedIndex() == 0) {
//                JOptionPane.showMessageDialog(null, "Pf seleccione o semestre da recibo", "AVISO", JOptionPane.WARNING_MESSAGE);
//                //setSelectedIndex(2);
//                cmb_avaliacao.requestFocus();
//                return false;
//          
//          }
//          else  if(  cmb_disciplina.getSelectedIndex() == 0) {
//                JOptionPane.showMessageDialog(null, "Pf seleccione a disciplina da recibo", "AVISO", JOptionPane.WARNING_MESSAGE);
//                //setSelectedIndex(2);
//                cmb_disciplina.requestFocus();
//                return false;
//          
//          }
//          else  if(  cmb_anoLectivo.getSelectedIndex() == 0) {
//                JOptionPane.showMessageDialog(null, "Pf seleccione o ano lectivo recibo", "AVISO", JOptionPane.WARNING_MESSAGE);
//                //setSelectedIndex(2);
//                cmb_anoLectivo.requestFocus();
//                return false;
//          
//          }
//          
//          
//          
//          return true;
//    
//    }
//    private void limpar_campos() {
//        
//        
//         
//          txt_recibo.setText("");
//          dc_data_lancamento.setDate( null );
//          cmb_avaliacao.setSelectedIndex(0);
//          cmb_disciplina.setSelectedIndex(0);
//          cmb_anoLectivo.setSelectedIndex(0);
//          cmb_semestre.setSelectedIndex(0);
//          
//          
//          
//         
//           
//    }
//    private void procedimento_eliminar()
//     {
//         
//         if (this.cod_recibo!=0)
//         {
//             
//                int opcao = JOptionPane.showConfirmDialog(null, "Tens a certeza que pretendes eliminar essa recibo do estudante : " +txt_recibo.getText());
//
//                if ( opcao == JOptionPane.YES_OPTION) {
//
//                            //eliminar();
//
//                }
//                else if ( opcao == JOptionPane.NO_OPTION ) {
//                     JOptionPane.showMessageDialog(null, "Nota não eliminada", "INFO", JOptionPane.INFORMATION_MESSAGE);
//                }
//                else if ( opcao == JOptionPane.CANCEL_OPTION ) {
//                     JOptionPane.showMessageDialog(null, "Operação cancelada");
//                }
//                
//         }else JOptionPane.showMessageDialog(null, "Pf seleccione a recibo", "AVISO", JOptionPane.WARNING_MESSAGE);
//     
//     }
// private void eliminar()
//     {
//         try {
//               turmaDao.destroy(this.cod_recibo);
//                actualizar();
//               limpar_campos();
//               JOptionPane.showMessageDialog(null, "Nota eliminado com sucesso!...");
//               
//         } catch (Exception e) {
//             JOptionPane.showMessageDialog(null, "Erro ao eliminar a recibo", "ERRO", JOptionPane.ERROR_MESSAGE);
//         }
//     
//    }    
//    private void procedimento_salvar() {
//    
//                if(validar_campos() ) {
//                
//                     //if(  !reciboDao.exist_recibo( txt_recibo )   ){
//                                 try {
//
//                                    this.recibo = new Nota();
//                                    setDadosNota();
//                                    this.reciboDao.create(this.recibo);
//                                
//                                    //mostrar_total_recibo();
//                                    adicionar_estudantes_jList();
//                                    actualizar();
//                                    limpar_campos();
//                                    JOptionPane.showMessageDialog(null, "Dados salvos com sucesso!...");
//
//                        } catch (Exception e) {
//                              JOptionPane.showMessageDialog(null, "Erro ao salvar a recibo","ERRO", JOptionPane.ERROR_MESSAGE);
//                       }
//
////                     }else JOptionPane.showMessageDialog(null, "Este recibo ja se encontra cadastrado no banco de dados","ERRO", JOptionPane.ERROR_MESSAGE);
//                }
//       
//    }
//    
    private void setCampos()
    {

        //cmb_mes.setModel(new DefaultComboBoxModel(mesDao.buscaTodos()));
        cmbAno.setModel( new DefaultComboBoxModel( anoLectivoDao.buscaTodos() ) );

    }

    //    public void setDadosNota(){      
//        
//        this.recibo.setValor(Double.parseDouble(txtValor.getText().toUpperCase() ) );
//        //setValor(  Double.parseDouble(modelo.getValueAt(i, 1).toString() ) );
//        this.recibo.
//        this.recibo.setFkAnoLectivo(anoLectivoDao.findAnoLectivo(anoLectivoDao.getIdByDescricao(getDescricaoAno() ) ) );
//        this.recibo.setFkSemestre(semestreDao.findSemestre(semestreDao.getIdByDescricao(  getDescricaoSemestre()) ) );
//        this.recibo.setFkDisciplina(disciplinaDao.findDisciplina(disciplinaDao.getIdByDescricao(  getDescricaoDisciplina()) ) );
//        this.recibo.setFkTipoNota(tipoNotaDao.findTipoNota(tipoNotaDao.getIdByDescricao(getDescricaoAvaliacao()) ) );
//        recibo.setFkEstudante(estudanteDao.findEstudante(estudanteDao.getIdByEstudante(getNomeCompleto()) ) );
//        this.dc_data_pagamento.setDate(new Date());
//        actualizar();
//    }
//    
//    private String getDescricaoAno()
//    {    
//         return String.valueOf(cmb_anoLectivo.getSelectedItem());    
//    } 
//    
//    private String getDescricaoDisciplina()
//    {    
//         return String.valueOf(cmb_disciplina.getSelectedItem());    
//    } 
//    private String getDescricaoSemestre()
//    {    
//         return String.valueOf(cmb_mes.getSelectedItem());    
//    }
//    
//    private String getDescricaoAvaliacao()
//    {    
//         return String.valueOf(cmb_avaliacao.getSelectedItem());    
//    }
//    
//    
    //----------- evento do teclado ---------------------------------------
    class TratarEventoTeclado implements KeyListener
    {

        String prefixo = "";

        public void keyPressed( KeyEvent evt )
        {

            if ( evt.getKeyCode() != KeyEvent.VK_BACK_SPACE && evt.getKeyCode() != KeyEvent.VK_ENTER )
            {
                char key = evt.getKeyChar();

                try
                {

                    prefixo = txt_iniciais_nome.getText().trim() + key;
                   
                    adicionar_estudantes_jList( estudanteDao.getALLEstudante_LIKE_nomeCompleto( prefixo ) );

                }
                catch ( Exception e )
                {
                    e.printStackTrace();
                    limpar_campos();
                }

            }
            else if ( evt.getKeyCode() == KeyEvent.VK_BACK_SPACE )
            {
                try
                {

                    prefixo = prefixo.toString().trim().substring( 0, prefixo.length() - 1 );
                    
                    adicionar_estudantes_jList( estudanteDao.getALLEstudante_LIKE_nomeCompleto( prefixo ) );

                }
                catch ( Exception e )
                {
                    limpar_campos();
                }

            }
        }

        public void keyReleased( KeyEvent evt )
        {
        }

        public void keyTyped( KeyEvent evt )
        {
        }

    }

    private int getIdEstudante()
    {
        return estudanteDao.getEstudanteByNome( jList1.getSelectedValue() ).getPkEstudante();
    }

    private String getNomeCompleto()
    {
        return jList1.getSelectedValue();
    }

//private int getIdCurso()
//{
//        return   cursoDao.getCursoByDesignacao(cmbCurso.getSelectedItem().toString()).getPkCurso();
//}
//
//private int getIdClasse()
//{
//        return  classeDao.getClasseByDesignacao(cmbClasse.getSelectedItem().toString()).getPkClasse();
//}
//
    private int getIdAno()
    {
        return anoLectivoDao.getAnoLectivoByDesignacao( cmbAno.getSelectedItem().toString() ).getPkAnoLectivo();
    }

//private void adicionar_tabela(){
//            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
//            modelo.setRowCount(0);
//            
//            List<Nota> lista = reciboDao.buscaTodasNotas();
//            List<Estudante> lista_estudante = estudanteDao.buscaTodosEstudante();
//            
//            System.out.println("size:  " +lista.size());
//            try {
//            
//                    for (int i = 0; i < lista.size(); i++) {
//                        
//                       Nota get = lista.get(i);
//                        modelo.addRow(new Object[]{
//                                get.getFkEstudante().getPkEstudante(),
//                                get.getFkEstudante().getNomeCompleto(),
//                                get.getValor(),
//                                get.getFkSemestre().getDesignacao(),
//                                get.getFkDisciplina().getDesignacao(),
//                                get.getFkTipoNota().getDesignacao(),
//                                get.getData(),
//                                //get.getFkFuncionario().getFkFuncao().getDesignacao(),
////                                MetodosUtil.getDataString(get.getDataInicio()),
////                                MetodosUtil.getDataString(get.getDataFim()),
//                                get.getPkNota()
//
//                            });
//                }
//                
//        } catch (Exception e) {
//            e.printStackTrace();
//        }
//            
//    }
    private void adicionar_tabela( List<Nota> recibo )
    {

        DefaultTableModel modelo = ( DefaultTableModel ) jTable1.getModel();

        modelo.setRowCount( 0 );

        for ( int i = 0; i < recibo.size(); i++ )
        {
            modelo.addRow( new Object[]
            {
                recibo.get( i ).getFkEstudante().getPkEstudante(),
                recibo.get( i ).getFkEstudante().getNomeCompleto(),
                recibo.get( i ).getValor(),
                recibo.get( i ).getFkTrimestre().getDesignacao(),
                recibo.get( i ).getFkDisciplina().getDesignacao(),
                recibo.get( i ).getFkTipoNota().getDesignacao(),
                //recibo.get(i).getData(),
                MetodosUtil.getDataString( recibo.get( i ).getData() ), //curso.get(i).getAbreviatura()
            } );
        }

    }

    private void mostrar_dados()
    {

        System.out.println( "ID ESTUDANTE: " + getIdEstudante() );
        System.out.println( "ID ANO: " + getIdAno() );
        ConfirmacaoMatricula object = confirmacaoMatriculaDao.getConfirmacaoMatByIdEstudanteAnoLetivo( getIdEstudante(), getIdAno() );

        int idUltimoMesPago = propinaDao.getLastUltimoMes( object.getFkEstudante().getPkEstudante() );

        lbAnoCurricular.setText( object.getFkTurma().getFkClasse().getDesignacao() );
        lbCurso.setText( object.getFkTurma().getFkCurso().getDesignacao() );
        lbSala.setText( object.getFkTurma().getFkSala().getDesignacao() );
        lbturno.setText( object.getFkTurma().getFkTurno().getDesignacao() );
        lbTurma.setText( object.getFkTurma().getDesignacao() );

        String valor = "";
        try
        {
            valor = precoPropinaDao.getPrecoPropinaByIdCursoAndIdAnoCurricular( object.getFkTurma().getFkCurso().getPkCurso(), object.getFkTurma().getFkClasse().getPkClasse() ).getValor().toString();

            this.precoPropina = precoPropinaDao.getPrecoPropinaByIdCursoAndIdAnoCurricular( object.getFkTurma().getFkCurso().getPkCurso(), object.getFkTurma().getFkClasse().getPkClasse() );

        }
        catch ( Exception e )
        {
            valor = "0";
        }

        try
        {

            Vector<String> vector_meses_faltas = MetodosUtil.getMesesFalta( idUltimoMesPago );
            cmb_mes.setModel( new DefaultComboBoxModel( vector_meses_faltas ) );
        }
        catch ( Exception e )
        {
        }

        lb_propina.setText( valor );

    }

    public void adicionar_item( boolean descrisao )
    {

        int aux = 0;
        DefaultTableModel modelo = ( DefaultTableModel ) jTable1.getModel();

        String mes = String.valueOf( cmb_mes.getItemAt( 0 ) );
        double multa = 0, desconto = 0, propina = 0, total = 0;
        propina = Double.parseDouble( lb_propina.getText() );
        total = ( propina + multa ) - desconto;

        if ( descrisao )
        {
            try
            {
                if ( cont != 0 )
                {
                    aux = cont - 1;

                    modelo.setNumRows( aux );
                    modelo.addRow( new Object[]
                    {
                        mes,
                        propina,
                        multa,
                        desconto,
                        total

                    } );

                    cmb_mes.removeItemAt( 0 );
                    vectorAux.add( jTable1.getModel().getValueAt( aux, 0 ) );
                    cmb_mes.setSelectedIndex( 0 );
                }

            }
            catch ( Exception e )
            {
                e.printStackTrace();
            }

        }
        else
        {
            remover_item();
            modelo.removeRow( cont );
        }

        calculo_total();

    }

    public void remover_item()
    {

        //Tira o ultimo objecto inserido para a combo cmMes
        cmb_mes.insertItemAt( ( String ) vectorAux.lastElement(), 0 );
        //Remove o ultimo elemento do vectorAux
        vectorAux.removeElement( vectorAux.lastElement() );
        cmb_mes.setSelectedIndex( 0 );
    }

    private void calculo_total()
    {

        DefaultTableModel modelo = ( DefaultTableModel ) jTable1.getModel();
        this.total_geral = 0;
        for ( int i = 0; i < modelo.getRowCount(); i++ )
        {
            total_geral = total_geral + Double.parseDouble( modelo.getValueAt( i, 4 ).toString() );
        }

        txt_total_geral.setText( String.valueOf( total_geral ) );

    }

    class TratarEventoTecladoValorEntregue implements KeyListener
    {

        String prefixo = "";

        public void keyPressed( KeyEvent evt )
        {
            if ( evt.getKeyCode() != KeyEvent.VK_BACK_SPACE )
            {
                char key = evt.getKeyChar();
                prefixo = txtValorEntregue.getText().trim() + key;
                txtSaldo.setText( String.valueOf( Double.parseDouble( prefixo ) - total_geral ) );

            }
            else if ( evt.getKeyCode() == KeyEvent.VK_BACK_SPACE )
            {
                char key = evt.getKeyChar();
                // System.err.println("KEY " +key);
                prefixo = txtValorEntregue.getText() + key;

                // txtSaldo.setText(  String.valueOf(      getSaldoAluno() +  Double.parseDouble(prefixo)  -   getTotal_Geral() )  ) ;
                double valor = 0;
                try
                {
                    valor = Double.parseDouble( prefixo.toString().trim().substring( 0, prefixo.length() - 2 ) );
                    //System.err.println("VALOR CONVERTIDO   :" + valor );

                }
                catch ( Exception e )
                {
                    valor = 0;
                }

                valor = valor - total_geral;
                txtSaldo.setText( String.valueOf( valor ) );
                // System.out.println("VALOR ENTREGUE ACTUAL: "  +prefixo);
            }
        }

        public void keyReleased( KeyEvent evt )
        {
        }

        public void keyTyped( KeyEvent evt )
        {
        }
    }

    private boolean validar_campos()
    {

        if ( dc_data_pagamento.getCalendar() == null )
        {
            JOptionPane.showMessageDialog( null, "Selecciona a data" );
            return false;
        }
        else if ( txtValorEntregue.getText() == null )
        {
            JOptionPane.showMessageDialog( null, "Campo Valor não pode ser vazio" );

            return false;

        }
        return true;

    }

    private void procedimento_salvar()
    {

        if ( validar_campos() )
        {
            if ( salvar_recibo() )
            {
                salvar_item_propina();
            }
        }

    }

    private boolean salvar_recibo()
    {

        ReciboPropina reciboPropina = new ReciboPropina();

        reciboPropina.setData( new Date() );
        reciboPropina.setHora( new Date() );
        reciboPropina.setMulta( 0.0 );
        reciboPropina.setDesconto( 0.0 );
        //reciboPropina.setNumBolderoux(txt_bolderoux.getText());
        reciboPropina.setObs( txt_obs.getText() );
        reciboPropina.setTotal( total_geral );
        reciboPropina.setTroco( Double.parseDouble( txtSaldo.getText() ) );
        reciboPropina.setFkEstudante( estudanteDao.findEstudante( getIdEstudante() ) );
        reciboPropina.setFkUsuario( usuarioDao.findUsuario( this.id_user ) );

        try
        {
            reciboPropinaDao.create( reciboPropina );
            return true;
        }
        catch ( Exception e )
        {
            return false;
        }

    }

    private void salvar_item_propina()
    {

        Propina propina = null;
        int last_recibo = reciboPropinaDao.getLastId();
        DefaultTableModel modelo = ( DefaultTableModel ) jTable1.getModel();
        boolean sucesso = true;

        for ( int i = 0; i < modelo.getRowCount(); i++ )
        {

            propina = new Propina();
            propina.setFkMes( mesDao.findMes( getIdMes( modelo.getValueAt( i, 0 ).toString() ) ) );
            propina.setFkPrecoPropina( precoPropina );
            propina.setFkReciboPropina( reciboPropinaDao.findReciboPropina( last_recibo ) );

            try
            {
                propinaDao.create( propina );
            }
            catch ( Exception e )
            {
                sucesso = false;
            }

        }

        if ( sucesso )
        {
            JOptionPane.showMessageDialog( null, "Pagamento efectuado com sucesso!..." );
            //limpa os dados
            limpar_campos();

            //Imprimir recibo
            try
            {
                // TODO add your handling code here:
                //(last_recibo,lbCurso.getText() , ano_lectivo);
                //actualizar_status_fim_contrato();
                new ReciboPagamento( last_recibo, lbAnoCurricular.getText(), lbCurso.getText() );
            }
            catch ( Exception ex )
            {
                ex.printStackTrace();
                // Logger.getLogger(ReciboPagamento.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        else
        {
            JOptionPane.showMessageDialog( null, "Falha ao efectuar a factura!...", "ERRO", JOptionPane.ERROR_MESSAGE );
        }

    }

    private int getIdMes( String mes )
    {
        return mesDao.getIdByDescricao( mes );
    }

}
