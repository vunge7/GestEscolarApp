/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import dao.PrecoPropinaDao;
import dao.ClasseDao;
import dao.ConfirmacaoMatriculaDao1;
import dao.CursoDao;
import dao.TipoConfirmacaoDao;
import dao.UsuarioDao;
import entity.Classe;
import entity.ConfirmacaoMatricula;
import entity.Curso;
import entity.Estudante;
import entity.PrecoPropina;
import entity.TipoConfirmacao;
import entity.Turma;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Date;
import java.util.List;
import javax.persistence.EntityManagerFactory;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import static javax.swing.UIManager.get;
import javax.swing.table.DefaultTableModel;
import util.JPAEntntityMannagerFactoryUtil;
import util.MetodosUtil;
import util.PictureChooser;
import static javax.swing.UIManager.get;
import static javax.swing.UIManager.get;
import static javax.swing.UIManager.get;

/**
 *
 * @author mac
 */
public class PrecoPropinaVisao extends javax.swing.JFrame {

   
    private EntityManagerFactory emf = JPAEntntityMannagerFactoryUtil.em;   
    private ClasseDao classeDao = new ClasseDao(emf);
    private CursoDao cursoDao = new CursoDao(emf);
    private UsuarioDao usuarioDao =  new UsuarioDao(emf);
    private PrecoPropinaDao precoPropinaDao = new PrecoPropinaDao(emf);
    private DefaultListModel listModel = new DefaultListModel();
    private DefaultListModel listModelTurma = new DefaultListModel();
    private PictureChooser image_view;
    private ImageIcon imageIcon;
    private PrecoPropina precoPropina;
    private int id_user = 0, cod_precoPropina = 0, cod_estudante = 0;
    
    
    
    public PrecoPropinaVisao(int id_user) {
        initComponents();
        setLocationRelativeTo(null);
        actualizar();
        setCampos();
        this.id_user = id_user;
        this.cod_precoPropina = cod_precoPropina;
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        txt_preco = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        cmb_curso = new javax.swing.JComboBox<String>();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel5 = new javax.swing.JPanel();
        dc_data_preco = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        cmb_classe = new javax.swing.JComboBox<String>();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        btn_salvar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(192, 208, 232));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Lucida Grande", 0, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("  ACTUALIZAR PREÇO PROPINA");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        txt_preco.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_precoActionPerformed(evt);
            }
        });
        jPanel4.add(txt_preco, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 50, 160, -1));

        jLabel1.setText(" ");
        jPanel4.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("Preço:");
        jPanel4.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 50, 50, 20));

        cmb_curso.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel4.add(cmb_curso, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 90, 162, -1));

        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("Curso:");
        jPanel4.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 50, 20));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                " Nº de ordem", "Valor", "data", "Curso", "Classe"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable1);

        jPanel5.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("Data de Actualização:");

        cmb_classe.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel4.setText("Ano Curricular:");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cmb_classe, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(dc_data_preco, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cmb_classe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(dc_data_preco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(70, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btn_salvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/6665_32x32.png"))); // NOI18N
        btn_salvar.setText("Actualizar Preço");
        btn_salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_salvarActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/Logout 32x32.png"))); // NOI18N
        jButton3.setText("Sair");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(btn_salvar, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(121, 121, 121)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGap(0, 11, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3)
                    .addComponent(btn_salvar)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(78, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_salvarActionPerformed
        // TODO add your handling code here:
        procedimento_salvar();
    }//GEN-LAST:event_btn_salvarActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txt_precoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_precoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_precoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrecoPropinaVisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrecoPropinaVisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrecoPropinaVisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrecoPropinaVisao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrecoPropinaVisao(1).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_salvar;
    private javax.swing.JComboBox<String> cmb_classe;
    private javax.swing.JComboBox<String> cmb_curso;
    private com.toedter.calendar.JDateChooser dc_data_preco;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txt_preco;
    // End of variables declaration//GEN-END:variables


//    private void setComponentes() {
//            dcDataInicio.setDate(new Date());
//            adicionar_estudantes_jList();   
//            cmbTipoConfirmacao.setModel( new DefaultComboBoxModel(  tipoDemissaoDao.buscaTodos()    )  );            
//            //activar_campos(false, true, false);
//            actualizar_tabela();
//    }
    
    
    
   
    
    
    
    
//    private boolean validar_campos() {
//            
//          if( txt_precoPropina.getText().equals("") ) {
//              
//                JOptionPane.showMessageDialog(null, "Pf digite a precoPropina do aluno", "AVISO", JOptionPane.WARNING_MESSAGE);
//                 //jocMessageLabel1.setBusyForeground(Color.RED);
//                //jocMessageLabel1.busyMessage("Pf digite a precoPropina do aluno");
//                //setSelectedIndex(0);
//                txt_precoPropina.requestFocus();
//               
//                return false;
//          
//          }
//           else  if( dc_data_preco.getCalendar() == null ) {
//                JOptionPane.showMessageDialog(null, "Pf insira a data de nascimento do precoPropina", "AVISO", JOptionPane.WARNING_MESSAGE);
//                //setSelectedIndex(0);
//                dc_data_preco.requestFocus();
//                return false;
//          }
//                   
//          else  if(  cmb_avaliacao.getSelectedIndex() == 0) {
//                JOptionPane.showMessageDialog(null, "Pf seleccione o semestre da precoPropina", "AVISO", JOptionPane.WARNING_MESSAGE);
//                //setSelectedIndex(2);
//                cmb_avaliacao.requestFocus();
//                return false;
//          
//          }
//          else  if(  cmb_classe.getSelectedIndex() == 0) {
//                JOptionPane.showMessageDialog(null, "Pf seleccione a disciplina da precoPropina", "AVISO", JOptionPane.WARNING_MESSAGE);
//                //setSelectedIndex(2);
//                cmb_classe.requestFocus();
//                return false;
//          
//          }
//          else  if(  cmb_anoLectivo.getSelectedIndex() == 0) {
//                JOptionPane.showMessageDialog(null, "Pf seleccione o ano lectivo precoPropina", "AVISO", JOptionPane.WARNING_MESSAGE);
//                //setSelectedIndex(2);
//                cmb_anoLectivo.requestFocus();
//                return false;
//          
//          }
//          
//          
//          
//          return true;
//    
//    }
    
    private void limpar_campos() {
        
        
         
          txt_preco.setText("");
          dc_data_preco.setDate( null );
          cmb_classe.setSelectedIndex(0);
          cmb_curso.setSelectedIndex(0);
          
          
          
         
           
    }
    
     
    private void actualizar()
    {
        adicionar_tabela(  precoPropinaDao.buscaTodasPrecoPropinas());
    }
    
    
    
    private void procedimento_eliminar()
     {
         
         if (this.cod_precoPropina!=0)
         {
             
                int opcao = JOptionPane.showConfirmDialog(null, "Tens a certeza que pretendes eliminar essa precoPropina do estudante : " +txt_preco.getText());

                if ( opcao == JOptionPane.YES_OPTION) {

                            eliminar();

                }
                else if ( opcao == JOptionPane.NO_OPTION ) {
                     JOptionPane.showMessageDialog(null, "PrecoPropina não eliminada", "INFO", JOptionPane.INFORMATION_MESSAGE);
                }
                else if ( opcao == JOptionPane.CANCEL_OPTION ) {
                     JOptionPane.showMessageDialog(null, "Operação cancelada");
                }
                
         }else JOptionPane.showMessageDialog(null, "Pf seleccione a precoPropina", "AVISO", JOptionPane.WARNING_MESSAGE);
     
     }


 private void eliminar()
     {
         try {
               precoPropinaDao.destroy(this.cod_precoPropina);
                actualizar();
               limpar_campos();
               JOptionPane.showMessageDialog(null, "PrecoPropina eliminado com sucesso!...");
               
         } catch (Exception e) {
             JOptionPane.showMessageDialog(null, "Erro ao eliminar a precoPropina", "ERRO", JOptionPane.ERROR_MESSAGE);
         }
     
    }    
    

    private void procedimento_salvar() {
    
               {
                
                     //if(  !precoPropinaDao.exist_precoPropina( txt_precoPropina )   ){
                                 try {

                                    this.precoPropina = new PrecoPropina();
                                    setDadosPrecoPropina();
                                    this.precoPropinaDao.create(this.precoPropina);
                                
                                   
                                    actualizar();
                                    limpar_campos();
                                    JOptionPane.showMessageDialog(null, "Dados salvos com sucesso!...");

                        } catch (Exception e) {
                              JOptionPane.showMessageDialog(null, "Erro ao salvar a precoPropina","ERRO", JOptionPane.ERROR_MESSAGE);
                       }

//                     }else JOptionPane.showMessageDialog(null, "Este precoPropina ja se encontra cadastrado no banco de dados","ERRO", JOptionPane.ERROR_MESSAGE);
                }
       
    }
    
    
    private void setCampos()
    {
        
         
         cmb_curso.setModel( new DefaultComboBoxModel(   cursoDao.buscaTodos ()));
         cmb_classe.setModel( new DefaultComboBoxModel(   classeDao.buscaTodos()   ));
                          
    }
    
    
    
    public void setDadosPrecoPropina(){      
        
        this.precoPropina.setValor(Double.parseDouble(txt_preco.getText().toUpperCase() ) );
        //setValor(  Double.parseDouble(modelo.getValueAt(i, 1).toString() ) );
        this.precoPropina.setFkCurso(cursoDao.findCurso(cursoDao.getIdByDescricao(getDescricaoCurso()) ) );
        this.precoPropina.setFkClasse(classeDao.findClasse(classeDao.getIdByDescricao(getDescricaoClasse())));
         this.precoPropina.setFkUsuario(  usuarioDao.findUsuario(  this.id_user  ) );
        this.precoPropina.setHora( new Date() );
        this.precoPropina.setData( new Date() );
        actualizar();
        
    }
    
    
    
    private String getDescricaoCurso()
    {    
         return String.valueOf(cmb_curso.getSelectedItem());    
    } 
    
    private String getDescricaoClasse()
    {    
         return String.valueOf(cmb_classe.getSelectedItem());    
    } 
       
    
    
    
    //----------- evento do teclado ---------------------------------------
    class TratarEventoTeclado implements KeyListener {
          String prefixo = "";

        public void keyPressed(KeyEvent evt) {

            if (evt.getKeyCode() != KeyEvent.VK_BACK_SPACE && evt.getKeyCode() != KeyEvent.VK_ENTER)
            {
                char key = evt.getKeyChar();
            
                try {
                    
                     //prefixo = txt_iniciais_nome.getText().trim() + key;
                    // adicionar_estudantes_jList(  estudanteDao.getALLEstudante_LIKE_nomeCompleto(prefixo));
                     
                } catch (Exception e) {
                    e.printStackTrace();
//                    limpar_campos();
                }
               
            }
            else if ( evt.getKeyCode() == KeyEvent.VK_BACK_SPACE  )
            {
                try {
                    
                    prefixo = prefixo.toString().trim().substring(0, prefixo.length() - 1);                
                    //adicionar_estudantes_jList(  estudanteDao.getALLEstudante_LIKE_nomeCompleto(prefixo));
                    
                } catch (Exception e) {
//                    limpar_campos();
                }
                
            }
        }
        public void keyReleased(KeyEvent evt)
        {}
        public void keyTyped(KeyEvent evt)
        {}
        
    }
    
    
private void adicionar_tabela( List<PrecoPropina> precoPropina)
{
     
            DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();

            modelo.setRowCount(0);
//            
//            
//            for (int i = 0; i < precoPropina.size(); i++) 
//            {
//               modelo.addRow(new Object[]{
//               precoPropina.get(i).getPkPrecoPropina(),
//               precoPropina.get(i).getValor(),
//               MetodosUtil.getDataString(precoPropina.get(i).getData()),    
//               precoPropina.get(i).getFkCurso().getDesignacao(),
//               precoPropina.get(i).getFkTipoConfirmacao().getDesignacao(),
//               //precoPropina.get(i).getData(),
//               
//               //curso.get(i).getAbreviatura()
//               
//            });
//            }
    
            List<Curso> lista_curso = cursoDao.buscaTodasCursos();
            List<Classe> lista_classe = classeDao.buscaTodasClasses();
            
            
            for (int i = 0; i < lista_curso.size(); i++) {
                       Curso curso = lista_curso.get(i);
                 for (int j = 0; j < lista_classe.size(); j++) {
                      Classe get = lista_classe.get(j);
                      
                      try {
                            PrecoPropina preco =  precoPropinaDao.findPrecoPropina(precoPropinaDao.getLastId(get.getPkClasse(), curso.getPkCurso()));
                            modelo.addRow( new Object[]{
                                    preco.getPkPrecoPropina(),
                                    preco.getValor(),
                                    preco.getData(),
                                    preco.getFkCurso().getDesignacao(),
                                    preco.getFkClasse().getDesignacao()
                            });
                      
                      } catch (Exception e) {
                          e.printStackTrace();
                     }
                   
                    
                }
        
    }
            
            
    
    
    

    }




    
}
